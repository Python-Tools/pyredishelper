:py:mod:`redisproxy.channelproducer`
====================================

.. py:module:: redisproxy.channelproducer


Module Contents
---------------

Classes
~~~~~~~

.. autoapisummary::

   redisproxy.channelproducer.ChannelProducerProxy



Functions
~~~~~~~~~

.. autoapisummary::

   redisproxy.channelproducer._mount_sync
   redisproxy.channelproducer._mount_async



.. py:class:: ChannelProducerProxy(*, url: Optional[str] = None, addresses: Optional[str] = None, aio: Optional[bool] = None, **conn_params: Any)

   Bases: :py:obj:`redisproxy.proxy.RedisProxy`

   redis的代理类.

   .. py:attribute:: __slots__
      :annotation: = ['instance', '_callbacks', '_instance_check', '_aio', '_cluster', 'mount']

      

   .. py:method:: regist_methods(self, instance: Any) -> None


   .. py:method:: from_proxy(clz, proxy: redisproxy.proxy.RedisProxy) -> ChannelProducerProxy
      :classmethod:

      从RedisProxy实例创建代理.

      :param proxy: RedisProxy的实例
      :type proxy: RedisProxy

      :returns: 满足protocols.ProducerProtocol或者protocols.AioProducerProtocol协议的消费者代理对象
      :rtype: ChannelProducerProxy



.. py:function:: _mount_sync(self: ChannelProducerProxy) -> Generator[ChannelProducerProxy, None, None]


.. py:function:: _mount_async(self: ChannelProducerProxy) -> AsyncGenerator[ChannelProducerProxy, None]
   :async:


